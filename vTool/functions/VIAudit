<#
.SYNOPSIS
    VMware Infrastrcuture audit
.DESCRIPTION
    This should help you to generate a VMware infrastructure audit report which includes most of the things that are required by a datacenter.
.NOTES
    File Name      : VIAudit.ps1
    Author         : gajendra d ambi
    Date           : august 2015
    Prerequisite   : PowerShell v3+, powercli 6+ over Vista and upper.
    Copyright      - None
.LINK
    Script posted over:
    
#>

#Start of the script

##If using in powershell then add snapins below &/or import modules
Add-PSSnapin VMware.VimAutomation.Core -ErrorAction SilentlyContinue
Import-Module VMware.VimAutomation.Core -ErrorAction SilentlyContinue

#disconnect from currently connected servers if any
#Disconnect-viserver * -ErrorAction SilentlyContinue

#connect to the vcenter server
Connect-VIServer

$viaudit = "$PSScriptRoot\VIAudit.html"
ni -ItemType file $viaudit -Force

#title
ac $viaudit '<table style="border:2px solid black" width=100% height=80 bgcolor="#005a9c" cellspacing="0" cellpadding="2"><tr><td><font face="Calibri, Times, serif" size="6" color="#ffffff"><left><b>VMWARE AUDIT</b></left></td></tr></table>'

#table for hyperlinks to each section
ac $viaudit '<!DOCTYPE html>              '
ac $viaudit '<html>                       '
ac $viaudit '<head>                       '
ac $viaudit '<title>VI Audit</title>    '
ac $viaudit '<!-- CSS -->                       '
ac $viaudit '<style>                            '
ac $viaudit '.hyperlink {                       '
ac $viaudit '  width: 100%;                     '
ac $viaudit '  font-family: Calibri, Times, serif;'
ac $viaudit '  color: #ffffff; '
ac $viaudit '  font-size: 13px;                 '
ac $viaudit '  padding: 0px;                    '
ac $viaudit '  margin: 0px;                     '
ac $viaudit '  text-align: left;                '
ac $viaudit '  background-color: #488AC7;       '
ac $viaudit '  border-collapse: collapse;       '
ac $viaudit '  border-style:solid;              '
ac $viaudit '  border-color:#005a9c;            '
ac $viaudit '  }                                '
ac $viaudit '.hyperlink td {                    '
ac $viaudit '  padding: 10px;                   '
ac $viaudit '  border: 1px solid black;         '
ac $viaudit '  }                                '
ac $viaudit '.hyperlink a:link {            '
ac $viaudit '    color: #ffffff; '
ac $viaudit '}                   '
ac $viaudit '.hyperlink a:visited {         '
ac $viaudit '    color: #ff8817; '
ac $viaudit '}                   '
ac $viaudit '.hyperlink a:hover {           '
ac $viaudit '    color: white;   '
ac $viaudit '}                   '
ac $viaudit '</style>                           '
ac $viaudit '                                   '
ac $viaudit '</head>                            '
ac $viaudit '<body>                             '
ac $viaudit '                                   '
ac $viaudit '<!-- HTML -->                      '
ac $viaudit '<table class="hyperlink">          '
ac $viaudit '	<tr>                              '
ac $viaudit '		<td height="70" align=center><a href=#section_1><font color=#ffffff>Hosts</a></td>       '
ac $viaudit '		<td height="70" align=center><a href=#section_2><font color=#ffffff>Scratch & Licensing</a></td>        '
ac $viaudit '		<td height="70" align=center><a href=#section_3><font color=#ffffff>Firewall</a></td>       '
ac $viaudit '		<td height="70" align=center><a href=#section_4><font color=#ffffff>Syslog</a></td>           '
ac $viaudit '		<td height="70" align=center><a href=#section_5><font color=#ffffff>NFS/TCPIP</a></td>      '
ac $viaudit '		<td height="70" align=center><a href=#section_6><font color=#ffffff>VAAI</a></td>             '
ac $viaudit '		<td height="70" align=center><a href=#section_7><font color=#ffffff>Clusters</a></td>         '
ac $viaudit '		<td height="70" align=center><a href=#section_8><font color=#ffffff>DRS Rules</a></td>            '
ac $viaudit '		<td height="70" align=center><a href=#section_9><font color=#ffffff>VM Rules</a></td>          '
ac $viaudit '		<td height="70" align=center><a href=#section_10><font color=#ffffff>Storage</a></td>          '
ac $viaudit '		<td height="70" align=center><a href=#section_11><font color=#ffffff>VM Settings</a></td> '
ac $viaudit '		<td height="70" align=center><a href=#section_12><font color=#ffffff>VM Notes</a></td>'
ac $viaudit '		<td height="70" align=center><a href=#section_13><font color=#ffffff>VM Security</a></td>           '
ac $viaudit '		<td height="70" align=center><a href=#section_14><font color=#ffffff>VM Startup</a></td>           '
ac $viaudit '		<td height="70" align=center><a href=#section_15><font color=#ffffff>vApp</a></td>        '
ac $viaudit '		<td height="70" align=center><a href=#section_16><font color=#ffffff>SNMP</a></td>'
ac $viaudit '		<td height="70" align=center><a href=#section_17><font color=#ffffff>Coredump</a></td>'
ac $viaudit '		<td height="70" align=center><a href=#section_18><font color=#ffffff>VMKernel</a></td>'
ac $viaudit '		<td height="70" align=center><a href=#section_19><font color=#ffffff>vSwitch</a></td>'
ac $viaudit '		<td height="70" align=center><a href=#section_20><font color=#ffffff>DVS</a></td>'
ac $viaudit '		<td height="70" align=center><a href=#section_21><font color=#ffffff>XtremIO</a></td>'
ac $viaudit '		<td height="70" align=center><a href=#section_22><font color=#ffffff>Plugins</a></td>'
ac $viaudit '		<td height="70" align=center><a href=#section_23><font color=#ffffff>vPlex</a></td>'
ac $viaudit '	</tr>                             '
ac $viaudit '</table>                           '
ac $viaudit '                                   '
ac $viaudit '</body>                            '
ac $viaudit '</html>                            '

#add a space/break
ac $viaudit  "<br>"

ac $viaudit '<!DOCTYPE html>'
ac $viaudit '<html>'
ac $viaudit '<head>'
ac $viaudit '<title>VI Audit</title>'
ac $viaudit '<style>'
ac $viaudit 'p{'
ac $viaudit 'font-size: 74%;'
ac $viaudit 'font-family: Calibri, Times, serif;'
ac $viaudit 'color: #196aa5;'
ac $viaudit 'text-align: left;'
ac $viaudit 'padding-left: 3px;'
ac $viaudit '}'
ac $viaudit 'th{'
ac $viaudit 'font-size: 77%;'
ac $viaudit 'font-family: Arial, Helvetica, sans-serif;'
ac $viaudit 'color: #196aa5;'
ac $viaudit 'text-align: left;'
ac $viaudit 'padding-left: 3px;'
ac $viaudit '}'
ac $viaudit '</style>'
ac $viaudit '</head>'
ac $viaudit '<body bgcolor="#E8E8E8">'
ac $viaudit '<table border=5px width="100%" cellspacing="0">'
#Section 1 : Host Information 1
Write-Host "collecting Section 1 : Host Information 1"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_1></a><h2><i>Section 1 : Host Information</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="100%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Datacenter</th>'
ac $viaudit '<th style="border:1px solid black">Cluster</th>'
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">Domain</th>'
ac $viaudit '<th style="border:1px solid black">SearchDomain</th>'
ac $viaudit '<th style="border:1px solid black">State</th>'
ac $viaudit '<th style="border:1px solid black">ESXi</th>'
ac $viaudit '<th style="border:1px solid black">build</th>'
ac $viaudit '<th style="border:1px solid black">Model</th>'
ac $viaudit '<th style="border:1px solid black">DNS</th>'
ac $viaudit '<th style="border:1px solid black">NTP</th>'
ac $viaudit '<th style="border:1px solid black">Timezone</th>'
ac $viaudit '<th style="border:1px solid black">Power Setting</th>'

foreach ($dc in (Get-Datacenter | sort)){
foreach ($vmhost in (Get-Datacenter $dc | get-vmhost | sort)) {
$Datacenter   = (Get-Datacenter $dc).Name
$Cluster      = $vmhost.Parent
$hostname     = (Get-Datacenter $dc | get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$Domain       = (Get-Datacenter $dc | get-vmhost $vmhost | get-vmhostnetwork).DomainName
$SearchDomain = (Get-Datacenter $dc | get-vmhost $vmhost | get-vmhostnetwork).SearchDomain
$state        = $vmhost.ConnectionState
$PowerState   = $vmhost.PowerState
$Model        = $vmhost.Model
$cpu          = $vmhost.NumCpu
$memory       = $vmhost.MemoryTotalGB
$version      = $vmhost.Version
$build        = $vmhost.Build
$IntelHT      = $vmhost.HyperthreadingActive
$DNS          = [string]::Join(", ",(Get-Datacenter $dc | get-vmhost $vmhost | get-vmhostnetwork).DnsAddress)
$NTP          = [string]::Join(", ",(Get-Datacenter $dc | get-vmhost $vmhost | Get-VMHostNtpServer))
$TimeZone     = (Get-Datacenter $dc | get-vmhost $vmhost).TimeZone
$power        = $vmhost.ExtensionData.config.PowerSystemInfo.CurrentPolicy.ShortName

write-host "collecting basic information about the host $hostname" -foregroundcolor green
#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Datacenter</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Cluster</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Domain</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$SearchDomain</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$state</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$version</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$build</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Model</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' width='5%'>"
ac $viaudit "<p>$DNS</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' width='5%'>"
ac $viaudit "<p>$NTP</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$TimeZone</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$power</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 2 : Host Information 2
Write-Host "collecting Section 2 : Host Information 2"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_2></a><h2><i>Section 2 : Host Information 2</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="70%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">Scratch</th>'
ac $viaudit '<th style="border:1px solid black">UUID</th>'
ac $viaudit '<th style="border:1px solid black">LicenseKey</th>'

foreach ($vmhost in (get-vmhost | sort)) {
$hostname   = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$Scratch    = (Get-VMhost $vmhost | Get-AdvancedSetting -Name "ScratchConfig.ConfiguredScratchLocation").value
$UUID       = (get-vmhost $vmhost | get-view).Hardware.SystemInfo.Uuid
$LicenseKey = (get-vmhost $vmhost).LicenseKey

write-host "collecting basic information about the host $hostname" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Scratch</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$UUID</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$LicenseKey</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 3 : Firewall Services
Write-Host "collecting Section 3 : Firewall Services"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_3></a><h2><i>Section 3 : Firewall Services</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="80%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">IPv6</th>'
ac $viaudit '<th style="border:1px solid black">SSH</th>'
ac $viaudit '<th style="border:1px solid black">Syslog</th>'
ac $viaudit '<th style="border:1px solid black">NTP</th>'
ac $viaudit '<th style="border:1px solid black">Update Manager</th>'
ac $viaudit '<th style="border:1px solid black">MOB</th>'
ac $viaudit '<th style="border:1px solid black">NetDump</th>'
ac $viaudit '<th style="border:1px solid black">SNMPclient</th>'
ac $viaudit '<th style="border:1px solid black">iSCSI</th>'
ac $viaudit '<th style="border:1px solid black">HA Agent</th>'
ac $viaudit '<th style="border:1px solid black">vMotion</th>'
ac $viaudit '<th style="border:1px solid black">FT</th>'

foreach ($vmhost in (get-vmhost | sort)) {
$hostname   = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$IPv6       = ((get-vmhost $vmhost | get-view).config.Network).IpV6Enabled
$SSH        = (get-vmhost $vmhost | Get-VmhostFirewallException -Name "SSH Client").Enabled
$syslog     = (get-vmhost $vmhost | Get-VmhostFirewallException -Name "syslog").Enabled
$NTP        = (get-vmhost $vmhost | Get-VmhostFirewallException -Name "NTP Client").Enabled
$um         = (get-vmhost $vmhost | Get-VmhostFirewallException -Name "vCenter Update Manager").Enabled
$mob        = (get-vmhost $vmhost | get-advancedsetting Config.HostAgent.plugins.solo.enableMob).Value
$NetDump    = ((get-vmhost $vmhost | get-esxcli).system.coredump.network.get()).Enabled
$SNMPclient = ((get-vmhost $vmhost | get-esxcli).system.snmp.get()).enable
$iSCSI      = (get-vmhost $vmhost | Get-VmhostFirewallException -Name "Software iSCSI Client").Enabled
$HAagent    = (get-vmhost $vmhost | Get-VmhostFirewallException -Name "vSphere High Availability Agent").Enabled
$vMotion    = (get-vmhost $vmhost | Get-VmhostFirewallException -Name "vMotion").Enabled
$FT         = (get-vmhost $vmhost | Get-VmhostFirewallException -Name "Fault Tolerance").Enabled

write-host "collecting firewall information about the host $hostname" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$IPv6</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$SSH</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$syslog</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NTP</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$um</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$mob</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NetDump</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$SNMPclient</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$iSCSI</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$HAagent</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vMotion</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$FT</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 4 : Firewall Services
Write-Host "collecting Section 4 : Syslog"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_4></a><h2><i>Section 4 : syslog</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="100%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">HostdSize</th>'
ac $viaudit '<th style="border:1px solid black">HostdRotate</th>'
ac $viaudit '<th style="border:1px solid black">VMKernelRotate</th>'
ac $viaudit '<th style="border:1px solid black">FDMRotate</th>'
ac $viaudit '<th style="border:1px solid black">VPXARotate</th>'
ac $viaudit '<th style="border:1px solid black">GlobalDefaultRotate</th>'
ac $viaudit '<th style="border:1px solid black">SyslogDefaultSize</th>'
ac $viaudit '<th style="border:1px solid black">SyslogHost</th>'

foreach ($vmhost in (get-vmhost | sort)) {
$hostname            = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$HostdSize           = (get-vmhost $vmhost | get-advancedsetting -name Syslog.loggers.hostd.size).Value
$HostdRotate         = (get-vmhost $vmhost | get-advancedsetting -name Syslog.loggers.hostd.rotate).Value
$VMKernelRotate      = (get-vmhost $vmhost | get-advancedsetting -name Syslog.loggers.vmkernel.rotate).Value
$FDMRotate           = (get-vmhost $vmhost | get-advancedsetting -name Syslog.loggers.fdm.rotate).Value
$VPXARotate          = (get-vmhost $vmhost | get-advancedsetting -name Syslog.loggers.vpxa.rotate).Value
$GlobalDefaultRotate = (get-vmhost $vmhost | get-advancedsetting -name Syslog.global.defaultRotate).Value
$SyslogDefaultSize   = (get-vmhost $vmhost | get-advancedsetting -name Syslog.global.defaultSize).Value
$SyslogHost          = (get-vmhost $vmhost | get-advancedsetting -name Syslog.global.logHost).Value

write-host "collecting syslog information about the host $hostname" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$HostdSize</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$HostdRotate</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMKernelRotate</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$FDMRotate</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VPXARotate</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$GlobalDefaultRotate</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$SyslogDefaultSize</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$SyslogHost</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 5 : NFS/TCPIP
Write-Host "collecting Section 5 : NFS/TCPIP"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_5></a><h2><i>Section 5 : TCP/IP</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="85%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">NFS Heartbeat Fail</th>'
ac $viaudit '<th style="border:1px solid black">NFS Heartbeat Frequency</th>'
ac $viaudit '<th style="border:1px solid black">NFS Heartbeat T/O</th>'
ac $viaudit '<th style="border:1px solid black">NFS Heartbeat Delta</th>'
ac $viaudit '<th style="border:1px solid black">Max Volumes</th>'
ac $viaudit '<th style="border:1px solid black">NFS Disk Use</th>'
ac $viaudit '<th style="border:1px solid black">TCIP Heap Size</th>'
ac $viaudit '<th style="border:1px solid black">TCIP Heap Max</th>'

foreach ($vmhost in (get-vmhost | sort)) {
$hostname  = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$NFShbf    = (get-vmhost $vmhost | get-advancedsetting -name NFS.HeartbeatMaxFailures).Value
$NFShf     = (get-vmhost $vmhost | get-advancedsetting -name NFS.HeartbeatFrequency).Value
$NFShto    = (get-vmhost $vmhost | get-advancedsetting -name NFS.HeartbeatTimeout).Value
$NFShd     = (get-vmhost $vmhost | get-advancedsetting -name NFS.HeartbeatDelta).Value
$NFSmv     = (get-vmhost $vmhost | get-advancedsetting -name NFS.MaxVolumes).Value
$NFSdur    = (get-vmhost $vmhost | get-advancedsetting -name Disk.UseDeviceReset).Value
$TCPIPsize = (get-vmhost $vmhost | get-advancedsetting -name Net.TcpipHeapSize).Value
$TCPIPmax  = (get-vmhost $vmhost | get-advancedsetting -name Net.TcpipHeapMax).Value

write-host "collecting NFS/TCPIP information about the host $hostname" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NFShbf</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NFShf</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NFShto</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NFShd</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NFSmv</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NFSdur</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$TCPIPsize</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$TCPIPmax</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 6 : VAAI
Write-Host "collecting Section 6 : VAAI"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_6></a><h2><i>Section 6 : VAAI</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="55%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">Hardware Accelerated Locking</th>'
ac $viaudit '<th style="border:1px solid black">Hardware Accelerated Move</th>'
ac $viaudit '<th style="border:1px solid black">Hardware Accelerated Init</th>'
ac $viaudit '<th style="border:1px solid black">Disk SchedQuantum</th>'
ac $viaudit '<th style="border:1px solid black">Disk MaxIOSize</th>'


foreach ($vmhost in (get-vmhost | sort)) {
$hostname         = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$vaailocking      = (Get-VMhost $vmhost | Get-AdvancedSetting -Name "VMFS3.HardwareAcceleratedLocking").value
$vaaimove         = (Get-VMhost $vmhost | Get-AdvancedSetting -Name "DataMover.HardwareAcceleratedMove").value
$vaaiinit         = (Get-VMhost $vmhost | Get-AdvancedSetting -Name "DataMover.HardwareAcceleratedInit").value
$vaaiSchedQuantum = (Get-VMhost $vmhost | Get-AdvancedSetting -Name "Disk.SchedQuantum").value
$vaaiMaxIOSize    = (Get-VMhost $vmhost | Get-AdvancedSetting -Name "Disk.DiskMaxIOSize").value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vaailocking</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vaaimove</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vaaiinit</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vaaiSchedQuantum</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vaaiMaxIOSize</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 7 : Clusters
Write-Host "collecting Section 7a : Clusters"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_7></a><h2><i>Section 7 : Clusters</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="85%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Datacenter</th>'
ac $viaudit '<th style="border:1px solid black">Cluster</th>'
ac $viaudit '<th style="border:1px solid black">HA</th>'
ac $viaudit '<th style="border:1px solid black">VM Restart Priority</th>'
ac $viaudit '<th style="border:1px solid black">Admission Control</th>'
ac $viaudit '<th style="border:1px solid black">HA Failover Level</th>'
ac $viaudit '<th style="border:1px solid black">VM Monitoring</th>'
ac $viaudit '<th style="border:1px solid black">Host Monitoring</th>'
ac $viaudit '<th style="border:1px solid black">DRS</th>'
ac $viaudit '<th style="border:1px solid black">DRSThreshold</th>'
ac $viaudit '<th style="border:1px solid black">DRS Level</th>'

foreach ($cluster in (get-cluster | sort)) {
$dc               = (Get-Datacenter).Name
$cluster          = (get-cluster $cluster).Name
$HA               = (get-cluster $cluster).HAEnabled
$VMrestart        = (get-cluster $cluster).HARestartPriority
$AdmissionControl = (get-cluster $cluster | Get-View).Configuration.DasConfig.AdmissionControlEnabled
$HAfailoverlevel  = (get-cluster $cluster | Get-View).Configuration.DasConfig.FailoverLevel
$VMmonitoring     = (get-cluster $cluster | Get-View).Configuration.DasConfig.VmMonitoring
$Hostmonitoring   = (get-cluster $cluster | Get-View).Configuration.DasConfig.HostMonitoring
$DRS              = (get-cluster $cluster).DrsEnabled
$DRSthreshold     = (get-cluster $cluster | Get-View).Configuration.DrsConfig.VmotionRate
$DRSlevel         = (get-cluster $cluster).DrsAutomationLevel

write-host "collecting $cluster cluster's configuration information" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$dc</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$cluster</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$HA</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMrestart</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$AdmissionControl</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$HAfailoverlevel</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMmonitoring</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Hostmonitoring</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$DRS</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$DRSthreshold</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$DRSlevel</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 7b : DRS Rules
Write-Host "collecting Section 7b : DRS Rules"
if ((get-cluster | Get-DrsRule) -ne $null)
{
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_8></a><h2><i>Section 7b : DRS Rules</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="50%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Cluster</th>'
ac $viaudit '<th style="border:1px solid black">Guest</th>'
ac $viaudit '<th style="border:1px solid black">DRS Rule</th>'
ac $viaudit '<th style="border:1px solid black">Enabled</th>'
ac $viaudit '<th style="border:1px solid black">Type</th>'

foreach ($cluster in (get-cluster)) {
if ((get-cluster $cluster | get-vm).count -gt 0)
{
foreach ($vm in (get-cluster $cluster | get-vm)) {
if ((Get-Cluster $cluster | Get-DrsRule -VM $vm) -ne $null) {
$Cluster   = (Get-Cluster $cluster | Get-DrsRule -VM $vm).Cluster
$Guest     = $vm.Name
$DRSRule   = (Get-Cluster $cluster | Get-DrsRule -VM $vm).Name
$Enabled   = (Get-Cluster $cluster | Get-DrsRule -VM $vm).Enabled
$Type      = (Get-Cluster $cluster | Get-DrsRule -VM $vm).Type

$DRSRules  = (Get-Cluster $cluster | Get-DrsRule -Type VMHostAffinity, VMAntiAffinity, VMAntiAffinity).Name
if ($DRSRules -ne $null) {

write-host "collecting information about DRSrules of $cluster" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Cluster</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Guest</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$DRSRule</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Enabled</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Type</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}
}
}
}
}

if ((get-cluster | Get-DrsRule) -eq $null)
{
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_8></a><h2><i>Section 7b : No DRS Rules</h2></i></font></td></tr></table>'
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 7c : DRS Rules
Write-Host "collecting Section 7c : DRS Rules"
if ((get-cluster | Get-DrsRule) -ne $null)
{
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_9></a><h2><i>Section 7c : DRS Rules</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="60%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Cluster</th>'
ac $viaudit '<th style="border:1px solid black">VMHostAffinity</th>'
ac $viaudit '<th style="border:1px solid black">Enabled</th>'
ac $viaudit '<th style="border:1px solid black">VMAntiAffinity</th>'
ac $viaudit '<th style="border:1px solid black">Enabled</th>'
ac $viaudit '<th style="border:1px solid black">VMAffinity</th>'
ac $viaudit '<th style="border:1px solid black">Enabled</th>'

foreach ($clustername in (get-cluster)) {
$Cluster              = (Get-Cluster $clustername).Name
$DRSRules             = (Get-Cluster $clustername | Get-DrsRule -Type VMHostAffinity, VMAntiAffinity, VMAntiAffinity).Name
$VMHostAffinities     = (Get-Cluster $clustername | Get-DrsRule -Type VMHostAffinity).Name
$VMHostAffinitystatus = (Get-Cluster $clustername | Get-DrsRule -Type VMHostAffinity).Enabled
$VMAntiAffinities     = (Get-Cluster $clustername | Get-DrsRule -Type VMAntiAffinity).Name
$VMAntiAffinitystatus = (Get-Cluster $clustername | Get-DrsRule -Type VMAntiAffinity).Enabled
$VMAffinities         = (Get-Cluster $clustername | Get-DrsRule -Type VMAffinity).Name
$VMAffinitystatus     = (Get-Cluster $clustername | Get-DrsRule -Type VMAffinity).Enabled

write-host "collecting VM rules at $cluster" -foregroundcolor green

if ($VMHostAffinities -ne $null) {
foreach ($VMHostAffinity in $VMHostAffinities) {

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Cluster</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMHostAffinity</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMHostAffinitystatus</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}

if ($VMAntiAffinities -ne $null) {
foreach ($VMAntiAffinity in $VMAntiAffinities) {

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Cluster</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMAntiAffinity</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMAntiAffinitystatus</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}

if ($VMAffinities -ne $null) {
foreach ($VMAffinity in $VMAffinities) {

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Cluster</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black' align=center>"
ac $viaudit "<p> - </p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMAffinity</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VMAffinitystatus</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}
}
}

if ((get-cluster | Get-DrsRule) -eq $null)
{
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_9></a><h2><i>Section 7c : No DRS Rules</h2></i></font></td></tr></table>'
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 8 : Storage
Write-Host "collecting Section 8 : Storage"

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_10></a><h2><i>Section 8 : Storage</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="70%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Cluster</th>'
ac $viaudit '<th style="border:1px solid black">Datastore</th>'
ac $viaudit '<th style="border:1px solid black">Type</th>'
ac $viaudit '<th style="border:1px solid black">version</th>'
ac $viaudit '<th style="border:1px solid black">CapacityGB</th>'
ac $viaudit '<th style="border:1px solid black">naaID</th>'

foreach ($cluster in (get-cluster | sort)) {
foreach ($ds in (get-cluster -name $cluster | get-datastore | sort)) {

$clustername = $cluster.Name
$Datastore   = $ds.Name
$Type        = $ds.Type
$version     = $ds.FileSystemVersion
$CapacityGB  = $ds.CapacityGB
$naaID       = $ds.ExtensionData.Info.Vmfs.Extent.DiskName

write-host "collecting storage information for $cluster" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$clustername</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Datastore</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Type</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$version</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$CapacityGB</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$naaID</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 9a : VM Settings
Write-Host "collecting Section 9a : VM Settings"

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_11></a><h2><i>Section 9a : VM Settings</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="100%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Name</th>'
ac $viaudit '<th style="border:1px solid black">IP</th>'
ac $viaudit '<th style="border:1px solid black">CPU</th>'
ac $viaudit '<th style="border:1px solid black">RAM[GB]</th>'
ac $viaudit '<th style="border:1px solid black">Nics</th>'
ac $viaudit '<th style="border:1px solid black">Disks</th>'
ac $viaudit '<th style="border:1px solid black">Mac</th>'
ac $viaudit '<th style="border:1px solid black">Host</th>'
ac $viaudit '<th style="border:1px solid black">VLAN</th>'
ac $viaudit '<th style="border:1px solid black">Status</th>'
ac $viaudit '<th style="border:1px solid black">NIC Type</th>'
ac $viaudit '<th style="border:1px solid black">VMware Tools</th>'
ac $viaudit '<th style="border:1px solid black">VM HW ver.</th>'

foreach ($vm in (get-vm)) {
$Name     = $vm.Name
$IP       = (get-vm $vm | Get-View).Guest.IpAddress
$CPU      = (get-vm $vm | Get-View).config.Hardware.NumCPU
$cores    = (get-vm $vm | Get-View).config.Hardware.NumCoresPerSocket
$RAM      = [math]::round(((get-vm $vm | Get-View).config.Hardware.MemoryMB)/1024)
$Nics     = ((Get-NetworkAdapter -VM $vm).Name).count
$Disks    = [string]::Join(", ",(((get-vm $vm | get-view).Guest.Disk) | ForEach-Object {[System.Math]::Round(($_.Capacity / 1GB), 2)}))
$Mac      = [string]::Join(", ",(Get-NetworkAdapter -VM $vm).MacAddress)
$Hostname = (get-vm $vm).host
$VLAN     = [string]::Join(", ",(Get-NetworkAdapter -VM $vm).NetworkName)
$status   = (get-vm $vm | Get-View).Guest.GuestState
$NICType  = [string]::Join(", ",(Get-NetworkAdapter -VM $vm).Type)
$tools    = (get-vm $vm | Get-View).Guest.ToolsVersion
$vmhwver  = (get-vm $vm | Get-View).Config.Version

write-host "collecting informaton about the virtual machine $Name" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Name</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$IP</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$CPU/$cores</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$RAM</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Nics</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Disks</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Mac</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$VLAN</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$status</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NICType</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$tools</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vmhwver</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 9b : VM Settings
Write-Host "collecting Section 9b : VM Settings"

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_12></a><h2><i>Section 9b : VM Settings</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="80%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">Name</th>'
ac $viaudit '<th style="border:1px solid black">Notes</th>'

foreach ($vm in (get-vmhost | get-vm | select Name)) {
$Hostname    = (get-vm $vm.Name).Host.Name
$Name        = $vm.Name
$Notes       = (get-vm $vm.Name).Notes

write-host "collecting some VM settings of $Name" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Name</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Notes</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 9c : VM Settings
Write-Host "collecting Section 9c : VM Security Hardening"

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_13></a><h2><i>Section 9c : VM Security Hardening</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="80%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">VM</th>'
ac $viaudit '<th style="border:1px solid black">Advanced Setting</th>'
ac $viaudit '<th style="border:1px solid black">Value</th>'
ac $viaudit '<th style="border:1px solid black">Expected Value</th>'

foreach ($vm in (get-vmhost | get-vm | select Name)) {
$Name        = $vm.Name
$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.diskWiper.disable).Value

write-host "collecting security hardening information of $vm.Name " -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'  rowspan=23>"
ac $viaudit "<p>$Name</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.diskWiper.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name  isolation.tools.diskShrink.disable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.diskWiper.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name RemoteDisplay.maxConnections).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>RemoteDisplay.maxConnections</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>1</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.copy.disable ).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.copy.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.paste.disable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.paste.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.setGUIOptions.enable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.setGUIOptions.enable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>False</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.dnd.disable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.dnd.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.device.connectable.disable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.device.connectable.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.device.edit.disable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.device.edit.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.getCreds.disable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.getCreds.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name vmci0.unrestricted).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>vmci0.unrestricted</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>False</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name log.rotateSize).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>log.rotateSize</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>1000000</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name log.keepOld).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>log.keepOld</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>10</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name tools.setInfo.sizeLimit).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>tools.setInfo.sizeLimit</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>1048576</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name guest.command.enabled).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>guest.command.enabled</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>False</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name tools.guestlib.enableHostInfo).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>tools.guestlib.enableHostInfo</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>False</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.unity.push.update.disable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.unity.push.update.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.ghi.launchmenu.change).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.ghi.launchmenu.change</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name isolation.tools.memSchedFakeSampleStats.disable).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>isolation.tools.memSchedFakeSampleStats.disable</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>True</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name floppyX.present).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>floppyX.present</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>False</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name SerialX.present).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>SerialX.present</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>False</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name parallelX.present).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>parallelX.present</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>False</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"

$setting     = (get-vm $vm.Name | get-advancedsetting -Name usb.present).Value

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>usb.present</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$setting</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>False</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 9d : VM startup priority
Write-Host "collecting Section 9d : Virtual Machine Startup Policy"
Write-Host "The command Get-VMStartPolicy has a reported bug and it might display some errors and may not work as intended yet"

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_14></a><h2><i>Section 9d : Virtual Machine Startup Policy</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="80%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">Name</th>'
ac $viaudit '<th style="border:1px solid black">StartAction</th>'
ac $viaudit '<th style="border:1px solid black">StartDelay</th>'
ac $viaudit '<th style="border:1px solid black">StartOrder</th>'

foreach ($vmhost in (get-vmhost | sort)) {
if ((Get-VMHost $vmhost | get-vm) -ne $null) {
$Hostname    = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$vmcount     = (get-vmhost $vmhost | get-vm).count

write-host "collecting information about VM startup priority" -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black' rowspan=$vmcount>"
ac $viaudit "<p>$Hostname</p>"
ac $viaudit "</td>"

foreach ($vm in (get-vmhost $vmhost | get-vm | select Name)) {
$Name        = $vm.Name
$StartAction = (Get-VMHost $vmhost | get-vm $vm.Name | Get-VMStartPolicy).StartAction
$StartDelay  = (Get-VMHost $vmhost | get-vm $vm.Name | Get-VMStartPolicy).StartDelay
$StartOrder  = (Get-VMHost $vmhost | get-vm $vm.Name | Get-VMStartPolicy).StartOrder

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Name</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$StartAction</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$StartDelay</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$StartOrder</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 9e : vAPP
Write-Host "collecting Section 9e : vAPP"

if ((get-vapp) -ne $null) {
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_15></a><h2><i>Section 9e : vAPP</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="100%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">vApp</th>'
ac $viaudit '<th style="border:1px solid black">vmname</th>'
ac $viaudit '<th style="border:1px solid black">StartOrder</th>'
ac $viaudit '<th style="border:1px solid black">StartDelay</th>'
ac $viaudit '<th style="border:1px solid black">StartAction</th>'
ac $viaudit '<th style="border:1px solid black">StopDelay</th>'
ac $viaudit '<th style="border:1px solid black">StopAction</th>'

foreach ($vapp in (get-vapp)) {
foreach ($vm in ($vapp.ExtensionData.VAppConfig.EntityConfig)) {
$vappname    = $vapp.Name
$vmname      = $vm.Tag
$StartOrder  = $vm.StartOrder
$StartDelay  = $vm.StartDelay
$StartAction = $vm.StartAction
$StopDelay   = $vm.StopDelay
$StopAction  = $vm.StopAction

write-host "collecting information about VM startup priority of $vmname at the vapp $vapp " -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vappname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vmname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$StartOrder</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$StartDelay</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$StartAction</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$StopDelay</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$StopAction</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"
}

if ((get-vapp) -eq $null) {
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_15></a><h2><i>Section 9e : no vApp found</h2></i></font></td></tr></table>'
ac $viaudit "<br>"
}

#Section 10 : SNMP
Write-Host "collecting Section 10 : SNMP"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_16></a><h2><i>Section 10 : SNMP</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="70%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">Enabled</th>'
ac $viaudit '<th style="border:1px solid black">Community</th>'
ac $viaudit '<th style="border:1px solid black">Port</th>'
ac $viaudit '<th style="border:1px solid black">Log Level</th>'
ac $viaudit '<th style="border:1px solid black">Targets</th>'
ac $viaudit '<th style="border:1px solid black">Sys Location</th>'

foreach ($vmhost in (get-vmhost)) {
$hostname     = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$Enabled      = ((get-vmhost $vmhost | get-esxcli).system.snmp.get()).enable
$Community    = ((get-vmhost $vmhost | get-esxcli).system.snmp.get()).communities
$Port         = ((get-vmhost $vmhost | get-esxcli).system.snmp.get()).port
$LogLevel     = ((get-vmhost $vmhost | get-esxcli).system.snmp.get()).loglevel
$Targets      = ((get-vmhost $vmhost | get-esxcli).system.snmp.get()).targets
$SysLocation  = ((get-vmhost $vmhost | get-esxcli).system.snmp.get()).syslocation

write-host "collecting SNMP information of $vmhost " -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Enabled</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Community</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Port</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$LogLevel</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Targets</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$SysLocation</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 11 : Coredump
Write-Host "collecting Section 11 : Coredump"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_17></a><h2><i>Section 11 : Coredump</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="50%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">Enabled</th>'
ac $viaudit '<th style="border:1px solid black">HostVNic</th>'
ac $viaudit '<th style="border:1px solid black">NetworkServerIP</th>'
ac $viaudit '<th style="border:1px solid black">Port</th>'

foreach ($vmhost in (get-vmhost)) {
$hostname          = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$Enabled           = ((get-vmhost $vmhost | get-esxcli).system.coredump.network.get()).Enabled
$HostVNic          = ((get-vmhost $vmhost | get-esxcli).system.coredump.network.get()).HostVNic
$NetworkServerIP   = ((get-vmhost $vmhost | get-esxcli).system.coredump.network.get()).NetworkServerIP
$Port              = ((get-vmhost $vmhost | get-esxcli).system.coredump.network.get()).NetworkServerPort

write-host "collecting coredump information of $vmhost " -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Enabled</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$HostVNic</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NetworkServerIP</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Port</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

#Section 12 : VMKernel Services
Write-Host "collecting Section 12 : VMKernel Services"
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_18></a><h2><i>Section 12 : VMKernel Services</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="100%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">Device</th>'
ac $viaudit '<th style="border:1px solid black">Management</th>'
ac $viaudit '<th style="border:1px solid black">ManagementIP</th>'
ac $viaudit '<th style="border:1px solid black">Device</th>'
ac $viaudit '<th style="border:1px solid black">Management</th>'
ac $viaudit '<th style="border:1px solid black">ManagementIP</th>'
ac $viaudit '<th style="border:1px solid black">Device</th>'
ac $viaudit '<th style="border:1px solid black">vMotion</th>'
ac $viaudit '<th style="border:1px solid black">vMotionIP</th>'
ac $viaudit '<th style="border:1px solid black">Device</th>'
ac $viaudit '<th style="border:1px solid black">FT</th>'
ac $viaudit '<th style="border:1px solid black">FT IP</th>'

foreach ($vmhost in (get-vmhost | sort)) {
$hostname      = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$mgmtDevice0   = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where ManagementTrafficEnabled -EQ True | where DeviceName -Match vmk0).Devicename
$mgmt0         = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where ManagementTrafficEnabled -EQ True | where DeviceName -Match vmk0).PortGroupName
$mgmtIP0       = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where ManagementTrafficEnabled -EQ True | where DeviceName -Match vmk0).ExtensionData.Spec.Ip.IpAddress

$mgmtDevice1   = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where ManagementTrafficEnabled -EQ True | where DeviceName -NotMatch vmk0).Devicename
$mgmt1         = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where ManagementTrafficEnabled -EQ True | where DeviceName -NotMatch vmk0).PortGroupName
$mgmtIP1       = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where ManagementTrafficEnabled -EQ True | where DeviceName -NotMatch vmk0).ExtensionData.Spec.Ip.IpAddress

$vmotionDevice = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where VMotionEnabled -EQ True).Devicename
$vmotion       = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where VMotionEnabled -EQ True).PortGroupName
$vmotionIP     = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where VMotionEnabled -EQ True).ExtensionData.Spec.Ip.IpAddress

$ftDevice      = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where FaultToleranceLoggingEnabled -EQ True).Devicename 
$ft            = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where FaultToleranceLoggingEnabled -EQ True).PortGroupName
$ftIP          = (get-vmhost $vmhost | Get-VMHostNetworkAdapter -VMKernel | where FaultToleranceLoggingEnabled -EQ True).ExtensionData.Spec.Ip.IpAddress

write-host "collecting VMKernel information of $vmhost " -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$mgmtDevice0</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$mgmt0</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$mgmtIP0</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$mgmtDevice1</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$mgmt1</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$mgmtIP1</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vmotionDevice</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vmotion</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vmotionIP</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$ftDevice</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$ft</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$ftIP</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 13a : Standard vswtich
Write-Host "collecting Section 13a : Standard vSwitch"

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_19></a><h2><i>Section 13a : Standard vSwitch</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="80%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">IPhash</th>'
ac $viaudit '<th style="border:1px solid black">vSwitch</th>'
ac $viaudit '<th style="border:1px solid black">LoadBalancingPolicy</th>'
ac $viaudit '<th style="border:1px solid black">NumPorts</th>'
ac $viaudit '<th style="border:1px solid black">Mtu</th>'
ac $viaudit '<th style="border:1px solid black">Nic</th>'
ac $viaudit '<th style="border:1px solid black">Portgroup</th>'

foreach ($vmhost in (get-vmhost | sort)) {
$hostname       = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$vswitchcount   = (get-vmhost $vmhost | get-virtualswitch -Standard).count
$IPhash         = [string]::Join(", ",(get-vmhost $vmhost | get-virtualswitch -Standard | get-virtualportgroup | where {$_.ExtensionData.ComputedPolicy.NicTeaming.Policy -EQ "loadbalance_ip"}))

write-host "collecting vSiwtch information of $hostname " -foregroundcolor green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'  rowspan=$vswitchcount>"
ac $viaudit "<p>$hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'  rowspan=$vswitchcount>"
ac $viaudit "<p>$IPhash</p>"
ac $viaudit "</td>"

foreach ($vss in (get-vmhost $vmhost | get-virtualswitch -Standard)) {
$LoadBalancingPolicy = (get-vmhost $vmhost | get-virtualswitch -Name $vss | get-nicteamingpolicy).LoadBalancingPolicy
$NumPorts            = (get-vmhost $vmhost | get-virtualswitch -Name $vss).NumPorts
$Mtu                 = (get-vmhost $vmhost | get-virtualswitch -Name $vss).Mtu
$Nic                 = [string]::Join(", ",(get-vmhost $vmhost | get-virtualswitch -Name $vss).Nic)
$Portgroup           = [string]::Join(", ",(get-vmhost $vmhost | get-virtualswitch -Name $vss | get-virtualportgroup).Name)

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vss</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$LoadBalancingPolicy</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NumPorts</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Mtu</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Nic</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Portgroup</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 13b : Distributed Portgroups
Write-Host "collecting Section 13b : Distributed vSwitch"
if ((Get-VDSwitch) -ne $null)
{
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_20></a><h2><i>Section 13b : Distributed vSwitch</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="80%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Datacenter</th>'
ac $viaudit '<th style="border:1px solid black">dvSwitch</th>'
ac $viaudit '<th style="border:1px solid black">version</th>'
ac $viaudit '<th style="border:1px solid black">dvPortgroups</th>'
ac $viaudit '<th style="border:1px solid black">vlan</th>'
ac $viaudit '<th style="border:1px solid black">Policy</th>'
ac $viaudit '<th style="border:1px solid black">NumPorts</th>'
ac $viaudit '<th style="border:1px solid black">active</th>'
ac $viaudit '<th style="border:1px solid black">standby</th>'

#let us make sure powercli vmware vds components are imported and installed
Add-PSSnapin VMware.VimAutomation.Vds -ErrorAction SilentlyContinue
Import-Module VMware.VimAutomation.Vds -ErrorAction SilentlyContinue

foreach ($vds in (Get-VDSwitch)) {
foreach ($dvpg in (Get-VDSwitch -Name $vds | get-vdportgroup)) {
$Datacenter   = $dvpg.Datacenter
$dvSwitch     = $dvpg.VirtualSwitch
$version      = (Get-VDSwitch -Name $vds).ExtensionData.Summary.ProductInfo.Version
$dvPortgroups = $dvpg.Name
$vlan         = $dvpg.ExtensionData.Config.DefaultPortConfig.Vlan.VlanId
$Policy       = $dvpg.ExtensionData.Config.DefaultPortConfig.UplinkTeamingPolicy.Policy.Value
$NumPorts     = $dvpg.NumPorts
$active       = $dvpg.ExtensionData.Config.DefaultPortConfig.UplinkTeamingPolicy.UplinkPortOrder.ActiveUplinkPort
$standby      = $dvpg.ExtensionData.Config.DefaultPortConfig.UplinkTeamingPolicy.UplinkPortOrder.StandbyUplinkPort

write-host "collecting distributed virtualswitch $dvSwitch information of the $Datacenter " -ForegroundColor Green

#start of a new row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Datacenter</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$dvSwitch</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$version</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$dvPortgroups</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$vlan</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Policy</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NumPorts</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$active</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$standby</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}
}

if ((Get-VDSwitch) -ne $null)
{
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_20></a><h2><i>Section 13b : No Distributed vSwitch</h2></i></font></td></tr></table>'
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 14 : XtremIO
#list hosts with xio
$xiohosts = $null,$null
foreach ($vmhost in (get-vmhost | sort))
{
$devices = ((Get-EsxCli -VMHost $vmhost).storage.core.device.list()).Model

if ($devices -contains "XtremApp"){
$xiohosts += "$vmhost"
}
}
$a = $xiohosts[2]

foreach ($xiohost in $a)
{
$devices = (Get-EsxCli -VMHost $xiohost).storage.core.device.list()

if ($devices.Model -contains "XtremApp")
{
Write-Host "collecting Section 14 : XremIO/XtremAPP Detected"

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_21></a><h2><i>Section 14 : XremIO/XtremAPP</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="50%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black"          >Hostname</th>'
ac $viaudit '<th style="border:1px solid black" width=10% >Vendor</th>'
ac $viaudit '<th style="border:1px solid black" width=19%>Device</th>'
ac $viaudit '<th style="border:1px solid black" width=10%>FnicMaxQdepth</th>'
ac $viaudit '<th style="border:1px solid black" width=25%>NoofoutstandingIOswithcompetingworlds</th>'


foreach ($vmhost in (get-vmhost | sort))
{
$xappluns = (Get-EsxCli -VMHost $vmhost).storage.core.device.list()
if ($xappluns.Model -contains "XtremApp"){

write-host "collecting XtremIO information of the $Hostname" -ForegroundColor Green

$Hostname                              = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$Vendor                                = [string]::Join(", ",((Get-EsxCli -VMHost $vmhost).storage.core.device.list()).Vendor)
$Device                                = [string]::Join(", ",((Get-EsxCli -VMHost $vmhost).storage.core.device.list()).Device)
$FnicMaxQdepth                         = ((get-vmhost $vmhost | get-esxcli).system.module.parameters.list("fnic") | where Name -EQ fnic_max_qdepth).value
$NoofoutstandingIOswithcompetingworlds = [string]::Join(", ",((Get-EsxCli -VMHost $vmhost).storage.core.device.list()).NoofoutstandingIOswithcompetingworlds)

#start of row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Vendor</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Device</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$FnicMaxQdepth</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$NoofoutstandingIOswithcompetingworlds</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}
}
}
}

if ($a -eq $null)
{
ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_22></a><h2><i>Section 14 : XremIO/XtremAPP not found</h2></i></font></td></tr></table>'
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 15 : vCenter Plugins
Write-Host "collecting Section 15 : vCenter Plugins" -ForegroundColor Green

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_22></a><h2><i>Section 15 : vCenter Plugins</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="50%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Description</th>'
ac $viaudit '<th style="border:1px solid black">Key</th>'
ac $viaudit '<th style="border:1px solid black">Company</th>'
ac $viaudit '<th style="border:1px solid black">Version</th>'

$keys         = (Get-View ExtensionManager).ExtensionList.key

foreach ($key in $keys){
$Description  = ((Get-View ExtensionManager).ExtensionList | where key -contains $key).Description.Label
$Company      = ((Get-View ExtensionManager).ExtensionList | where key -contains $key).Company
$Version      = ((Get-View ExtensionManager).ExtensionList | where key -contains $key).Version

#start of row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Description</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Key</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Company</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Version</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

##Section 16 : Other Host's advanced settings (for vplex only)
Write-Host "collecting Section 16 : Other Host's advanced settings (for vplex only)" -ForegroundColor Green

ac $viaudit '<table style="border:2px solid black" width=100% bgcolor="#005a9c" cellspacing="0" cellpadding="0"><tr><td><font face="Calibri, Times, serif" size="2" color="#ffffff"><a id=section_23></a><h2><i>Section 16 : Other advanced settings of hosts (for vplex only)</h2></i></font></td></tr></table>'
#main indenting/enclosing table
ac $viaudit '<table style="border:1px solid black" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#a #ffffff separator between the main&data table 
ac $viaudit '<table style="border:1px solid #ffffff" width="100%" bgcolor="white" cellspacing="0" cellpadding="0"<tr><td>'
#data table
ac $viaudit '<table border="1px" width="50%" bgcolor="white" cellspacing="0" cellpadding="0">'
#colors from http://www.color-hex.com/
ac $viaudit '<th style="border:1px solid black">Hostname</th>'
ac $viaudit '<th style="border:1px solid black">VMkernel.Boot.terminateVMOnPDL</th>'
ac $viaudit '<th style="border:1px solid black">Disk.AutoremoveOnPDL</th>'

foreach ($vmhost in (get-vmhost | sort)){
$Hostname         = (get-vmhost $vmhost).ExtensionData.Config.Network.DnsConfig.HostName
$terminateVMOnPDL = (get-vmhost $vmhost | Get-AdvancedSetting -Name VMkernel.Boot.terminateVMOnPDL).Value
$AutoremoveOnPDL  = (get-vmhost $vmhost | Get-AdvancedSetting -Name Disk.AutoremoveOnPDL).Value

#start of row
ac $viaudit "<tr>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$Hostname</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$terminateVMOnPDL</p>"
ac $viaudit "</td>"

ac $viaudit "<td style='border:1px solid black'>"
ac $viaudit "<p>$AutoremoveOnPDL</p>"
ac $viaudit "</td>"

#end of row
ac $viaudit "</tr>"
}

#Ending & fixing the position of the table
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "</td></tr></table>"
ac $viaudit "<br>"

ii $viaudit
